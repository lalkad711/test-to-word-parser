plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
	id 'java'
	id 'eclipse'
	id 'idea'
	id "com.diffplug.spotless" version "6.23.3" // For code formatting
}

repositories {
    // TODO: Remove this - Will not work on public network. Take a look at gradle.properties
    //maven { url resolveRepoUrl }
    // TODO: Uncomment this to work on public network
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    
    //Lombok for generating boiler plate code - getter, setter etc.
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    
    // JaxB for writing xml files
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'javax.activation:activation:1.1' 
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1' 
    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-text
    implementation 'org.apache.commons:commons-text:1.11.0'
    
    // For writing csv files
    implementation 'com.opencsv:opencsv:5.9'
    
    //Mapstruct for request to DTO and vice versa mappers
    //implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    //annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'

    
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.9.1')
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.demo.parser.App'
}

spotless {
	java {
		palantirJavaFormat('2.38.0')
		importOrder('java|javax|jakarta', 'com.swedbank')
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}
